package main

import (
	"encoding/json"
	"fmt"
	"log"
	"net/http"
	"os"
)

const URLINFO_V1_PATTERN = "/v1/urlinfo"
const LISTENING_HOST_AND_PORT = ":8080"
const URL_KEYWORD = "url"

type URLInfo struct {
	URL     string `json:"url"`
	Malware bool   `json:"malware"`
}

func getURLInfo(writer http.ResponseWriter, req *http.Request) {
	log.Printf("url info request URI:%s\n", req.RequestURI)

	url := req.URL.Query().Get(URL_KEYWORD)
	log.Printf("url info request for url:%s\n", url)

	writer.WriteHeader(http.StatusCreated)
	writer.Header().Set("Content-Type", "application/json")

	urlinfo := &URLInfo{URL: url, Malware: false}
	response, err := json.Marshal(urlinfo)
	if err != nil {
		log.Println(err)
		return
	}

	fmt.Fprintln(writer, string(response))
}

func initializeService() {
	http.HandleFunc(URLINFO_V1_PATTERN, getURLInfo)
	log.Printf("Listening on address:%s\n", LISTENING_HOST_AND_PORT)
	http.ListenAndServe(LISTENING_HOST_AND_PORT, nil)
}

func main() {
	log.Printf("Initializing Service: %s\n", os.Args[0])
	initializeService()
}
