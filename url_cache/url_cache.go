package url_cache

import (
	"log"
	"sync"
)

type URLCache struct {
	mutex sync.Mutex
	urls  map[string]struct{}
}

func CreateInstance() *URLCache {
	return &URLCache{urls: make(map[string]struct{})}
}

func (urlCache *URLCache) AddURL(url string) {
	urlCache.mutex.Lock()
	_, found := urlCache.urls[url]
	if !found {
		log.Printf("updating malware list with url:%s\n", url)
		urlCache.urls[url] = struct{}{}
	}
	urlCache.mutex.Unlock()
}

func (urlCache *URLCache) CheckForURL(url string) bool {
	log.Printf("checking malware list for url:%s\n", url)
	if _, found := urlCache.urls[url]; found {
		log.Printf("malware list contains url:%s\n", url)
		return true
	}
	log.Printf("malware list does not contain url:%s\n", url)
	return false
}
